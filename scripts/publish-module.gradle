apply plugin: 'maven-publish'
apply plugin: 'signing'

def LIB_VERSION = System.getenv('THE_VERSION')

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
    from android.sourceSets.main.kotlin.srcDirs
}

artifacts {
    archives androidSourcesJar
}

group = 'io.ionic.libs'
version = LIB_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // Coordinates
                groupId 'io.ionic.libs'
                artifactId 'osfilesystem-android'
                version LIB_VERSION

                // Two artifacts, the `aar` (or `jar`) and the sources
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    artifact("$buildDir/libs/${project.getName()}-${version}.jar")
                }

                artifact androidSourcesJar

                // POM Data
                pom {
                    name = 'osfilesystem-android'
                    description = 'File system Android Lib'
                    url = 'https://github.com/ionic-team/OSFilesystemLib-Android'
                    licenses {
                        license {
                            name = 'License'
                            url = 'https://github.com/ionic-team/OSFilesystemLib-Android/blob/main/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            name = 'Ionic'
                            email = 'hi@ionic.io'
                        }
                    }

                    // Version Control Info
                    scm {
                        connection = 'scm:git:github.com:ionic-team/OSFilesystemLib-Android.git'
                        developerConnection = 'scm:git:ssh://github.com:ionic-team/OSFilesystemLib-Android.git'
                        url = 'https://github.com/ionic-team/OSFilesystemLib-Android/tree/main'
                    }
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
        rootProject.ext["signing.keyId"],
        rootProject.ext["signing.key"],
        rootProject.ext["signing.password"],
    )
    sign publishing.publications
}